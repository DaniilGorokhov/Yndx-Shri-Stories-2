!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r,a=t();for(r in a)("object"==typeof exports?exports:e)[r]=a[r]}}(this,function(){return a={372:e=>{const a=new Map;e.exports={likes:a,commentHandler:function(t){if(!(t.createdAt>Date.now())){let e;e="object"==typeof t.author?t.author.id:t.author;t={timestamp:t.createdAt,quantity:t.likes.length};const r=a.get(e);void 0!==r?r.push(t):a.set(e,[t])}}}},183:e=>{const i=[],s=new Map;e.exports={commits:i,commitSummaries:s,commitHandler:function(r){if(!(r.timestamp>Date.now())){let e;e="object"==typeof r.author?r.author.id:r.author;var t={id:r.id,author:e,timestamp:r.timestamp};i.push(t);const a=[],o=new Set;for(let t=0;t<r.summaries.length;t+=1){let e;e="object"==typeof r.summaries[t]?r.summaries[t].id:r.summaries[t],o.has(e)||(a.push(e),o.add(e))}s.set(r.id,a)}}}},327:e=>{const a=[],o={};e.exports={sprints:a,activeSprint:o,sprintHandler:function(e,t){if(void 0===t)throw new Error("error: activeSprint argument did not pass; it is necessary argument");const r={id:e.id,name:e.name,startAt:e.startAt,finishAt:e.finishAt};e.id===t&&(r.active=!0,o.data=r),a.push(r)}}},919:e=>{const t=new Map;e.exports={summaries:t,summaryHandler:function(e){e={id:e.id,value:e.added+e.removed},t.set(e.id,e)}}},542:e=>{const t=new Map;e.exports={users:t,userHandler:function(e){e={id:e.id,name:e.name,avatar:e.avatar},t.set(e.id,e)}}},194:e=>{e.exports={binarySearchStartByProperty:function({array:e,itemProperty:t,value:r,valueProperty:a}){let o=-1,i=e.length;for(;i-o!=1;){var s=Math.floor((o+i)/2);Math.floor(1e4*e[s][t])>Math.floor(1e4*r[a])?i=s:o=s}return o}}},522:e=>{e.exports={computeHeatMap:function(t){var r=["sun","mon","tue","wed","thu","fri","sat"];const a={};for(let e=0;e<r.length;e+=1){const s=[];for(let e=0;e<24;e+=1)s.push(0);a[r[e]]=s}for(let e=0;e<t.length;e+=1){var o=t[e];const n=new Date(o.timestamp);var i=n.getDay(),o=n.getHours();a[r[i]][o]+=1}return a}}},903:e=>{e.exports={computeStatistics:function({sprints:t,commitSummaries:r,summaries:a}){var o={min:0,mid:0,max:0,extra:0};const i=[];for(let e=0;e<t.length;e+=1){const l={...o};var s=t[e];for(let e=0;e<s.length;e+=1){var n=s[e],d=r.get(n.id);let t=0;if(d)for(let e=0;e<d.length;e+=1){var p=a.get(d[e]);t+=p.value}1001<=t?l.extra+=1:501<=t?l.max+=1:101<=t?l.mid+=1:1<=t&&(l.min+=1)}i.push(l)}return i}}},329:e=>{e.exports={getFormattedText:function(e,t,r,{valueHandler:a=null}={}){var o=Math.abs(e)%10,i=(Math.abs(e)%100-o)/10;let s;return s=a?a(e):e,1==i?`${s} ${t}${r.other}`:1==o?`${s} ${t}${r.one}`:1<o&&o<5?`${s} ${t}${r.twoFive}`:`${s} ${t}${r.other}`}}},680:e=>{e.exports={sortByProperty:function({array:e,propertyForSort:o,descending:i=!1,withParse:s=!0}){e.sort((e,t)=>{let r,a;return a=s?(r=parseFloat(e[o]),parseFloat(t[o])):(r=e[o],t[o]),r===a?s?i?e.id-t.id:t.id-e.id:0:s?i?a-r:r-a:i?2*(a>r)-1:2*(r>a)-1})}}},560:(e,t,r)=>{const{binarySearchStartByProperty:h}=r(194);e.exports={sprintCommits:function(t,r){const a=new Map;var o={startAt:t[t.length-1].finishAt};for(let e=0;e<r.length;e+=1){var i={...r[e]},s=h({array:[...t,o],itemProperty:"startAt",value:i,valueProperty:"timestamp"});if(-1!==s&&s!==t.length){s=t[s].id;const c=a.get(s);void 0!==c?c.push(i):a.set(s,[i])}}const n=[];let d,p;for(let e=0;e<t.length;e+=1){var l=t[e];const u={sprint:l,commits:[]};var m=a.get(l.id);Array.isArray(m)&&(u.commits=m),l.active&&(d=u.commits,p=0===e?[]:n[e-1].commits),n.push(u)}return{sprintCommitsArray:n,activeCommits:d,previousCommits:p}}}},155:e=>{e.exports={userCommits:function(e,t){const a=new Map;for(let e=0;e<t.length;e+=1){var{author:r}=t[e],o=a.get(r)||0;a.set(r,o+1)}const i=[];return e.forEach((e,t)=>{const r=a.get(t)||0;e={id:e.id,name:e.name,avatar:e.avatar,valueText:r.toString()};i.push(e)}),i}}},422:(e,t,r)=>{const{getFormattedText:m}=r(329);e.exports={userLikes:function(e,n,{startAt:d,finishAt:p}){const l=[];return e.forEach((e,t)=>{const r={...e};var a=n.get(t);let o=0;if(a)for(let e=0;e<a.length;e+=1){var{timestamp:i,quantity:s}=a[e];Math.floor(1e4*i)>=Math.floor(1e4*d)&&Math.floor(1e4*i)<Math.floor(1e4*p)&&(o+=s)}r.valueText=m(o,"голос",{one:"",twoFive:"а",other:"ов"}),l.push(r)}),l}}},754:e=>{class t{constructor(e){this.entities={data:e,next:null},this.tail=this.entities}next(){this.entities=this.entities.next}add(e){e={data:e,next:null};this.tail.next=e,this.tail=e}handleProperty({property:t,type:e="array-like"}){var{data:r}=this.entities;if("array-like"===e)for(let e=0;e<r[t].length;e+=1)"object"==typeof r[t][e]&&this.add(r[t][e]);else{if("not array-like"!==e)throw new Error("error: invalid type. type can be 'array-like' or 'not array-like'");"object"==typeof r[t]&&this.add(r[t])}}}e.exports={LinkedList:t}},825:e=>{class t{constructor(t){this.storage={},this.typesSet=new Set;for(let e=0;e<t.length;e+=1){var r=t[e];this.storage[r]=new Set,this.typesSet.add(r)}}add(e,t){if(this.typesSet.has(e)){var r=this.has(e,t);return this.storage[e].add(t),!r}return!1}has(e,t){return!!this.typesSet.has(e)&&this.storage[e].has(t)}}e.exports={UniquenessStorage:t}},138:(e,t,r)=>{const{LinkedList:k}=r(754),{UniquenessStorage:A}=r(825),{users:H,userHandler:M}=r(542),{likes:D,commentHandler:j}=r(372),{sprints:C,activeSprint:$,sprintHandler:F}=r(327),{commits:B,commitSummaries:E,commitHandler:L}=r(183),{summaries:q,summaryHandler:U}=r(919),{userLikes:I}=r(422),{sortByProperty:O}=r(680),{sprintCommits:z}=r(560),{userCommits:G}=r(155),{computeStatistics:J}=r(903),{computeHeatMap:K}=r(522),{votePrepareData:N}=r(29),{leadersPrepareData:Q}=r(428),{chartPrepareData:R}=r(146),{diagramPrepareData:V}=r(786),{activityPrepareData:W}=r(55);e.exports={prepareData:function(t,{sprintId:r}){const a=new A(["Project","User","Issue","Comment","Commit","Summary","Sprint"]);for(let e=0;e<t.length;e+=1){var o=t[e];const w=new k(o);for(;null!==w.entities;){var i=w.entities.data,{type:s}=i;if(!a.has(s,i.id)){const b=new Set;switch(s){case"User":M(i),w.handleProperty({property:"friends"}),i.comments&&(w.handleProperty({property:"comments"}),b.add("comments")),i.commits&&(w.handleProperty({property:"commits"}),b.add("commits"));var n=["id","type","name","login","avatar","friends"];for(let e=0;e<n.length;e+=1)b.add(n[e]);break;case"Comment":j(i),w.handleProperty({property:"author",type:"not array-like"}),w.handleProperty({property:"likes"});var d=["id","type","author","message","likes","createdAt"];for(let e=0;e<d.length;e+=1)b.add(d[e]);break;case"Commit":L(i),w.handleProperty({property:"author",type:"not array-like"}),w.handleProperty({property:"summaries"});var p=["id","type","author","message","summaries","timestamp"];for(let e=0;e<p.length;e+=1)b.add(p[e]);break;case"Issue":i.resolvedBy&&(w.handleProperty({property:"resolvedBy",type:"not array-like"}),b.add("resolvedBy")),w.handleProperty({property:"comments"});var l=["id","type","name","status","comments","createdAt"];for(let e=0;e<l.length;e+=1)b.add(l[e]);break;case"Summary":U(i),i.comments&&(w.handleProperty({property:"comments"}),b.add("comments"));var m=["id","type","path","added","removed"];for(let e=0;e<m.length;e+=1)b.add(m[e]);break;case"Sprint":F(i,r);var c=["id","type","name","startAt","finishedAt"];for(let e=0;e<c.length;e+=1)b.add(c[e]);break;case"Project":w.handleProperty({property:"dependencies"}),w.handleProperty({property:"issues"}),w.handleProperty({property:"commits"});var u=["id","type","name","dependencies","issues","commits"];for(let e=0;e<u.length;e+=1)b.add(u[e]);break;default:throw new Error("error: type of entity is invalid")}var h,f=Object.keys(i);for(let e=0;e<f.length;e+=1)b.has(f[e])||(h=f[e],Array.isArray(i[h])?w.handleProperty({property:h}):"object"==typeof i[h]&&w.handleProperty({property:h,type:"not array-like"}));a.add(s,i.id)}w.next()}}if(void 0===$.data)throw new Error("error: active sprint did not find");O({array:C,propertyForSort:"id"});var{sprintCommitsArray:e,activeCommits:y,previousCommits:v}=z(C,B),x=G(H,y);O({array:x,propertyForSort:"valueText",descending:!0});var g=I(H,D,$.data);O({array:g,propertyForSort:"valueText",descending:!0});var[P,S]=J({sprints:[y,v],summaries:q,commitSummaries:E}),T=K(y);return[Q(x,$.data),N(g,$.data),R(e,x,$.data),V(P,S,$.data,y.length,v.length),W(T,$.data)]}}},55:e=>{e.exports={activityPrepareData:function(e,{name:t}){return{alias:"activity",data:{title:"Коммиты",subtitle:t,data:e}}}}},146:e=>{e.exports={chartPrepareData:function(t,e,{name:r}){const a=[];for(let e=0;e<t.length;e+=1){const o=t[e],i={title:o.sprint.id.toString(),hint:o.sprint.name,value:o.commits.length};o.sprint.active&&(i.active=!0),a.push(i)}return{alias:"chart",data:{title:"Коммиты",subtitle:r,values:a,users:e}}}}},786:(e,t,r)=>{const{getFormattedText:n}=r(329);e.exports={diagramPrepareData:function(e,t,{name:r},a,o){var i=e=>0<e?`+${e}`:e.toString(),s=n(a,"коммит",{one:"",twoFive:"а",other:"ов"}),a=i(a-o),o=["коммит",{one:"",twoFive:"а",other:"ов"}],i=[{valueText:n(e.extra,...o),differenceText:n(e.extra-t.extra,...o,{valueHandler:i})},{valueText:n(e.max,...o),differenceText:n(e.max-t.max,...o,{valueHandler:i})},{valueText:n(e.mid,...o),differenceText:n(e.mid-t.mid,...o,{valueHandler:i})},{valueText:n(e.min,...o),differenceText:n(e.min-t.min,...o,{valueHandler:i})}];return{alias:"diagram",data:{title:"Размер коммитов",subtitle:r,totalText:s,differenceText:`${a} с прошлого спринта`,categories:[{title:"> 1001 строки",valueText:i[0].valueText,differenceText:i[0].differenceText},{title:"501 — 1000 строк",valueText:i[1].valueText,differenceText:i[1].differenceText},{title:"101 — 500 строк",valueText:i[2].valueText,differenceText:i[2].differenceText},{title:"1 — 100 строк",valueText:i[3].valueText,differenceText:i[3].differenceText}]}}}}},428:e=>{e.exports={leadersPrepareData:function(e,{name:t}){return{alias:"leaders",data:{title:"Больше всего коммитов",subtitle:t,emoji:"👑",users:e}}}}},29:e=>{e.exports={votePrepareData:function(e,{name:t}){return{alias:"vote",data:{title:"Самый 🔎 внимательный разработчик",subtitle:t,emoji:"🔎",users:e}}}}}},o={},function e(t){if(o[t])return o[t].exports;var r=o[t]={exports:{}};return a[t](r,r.exports,e),r.exports}(138);var a,o});